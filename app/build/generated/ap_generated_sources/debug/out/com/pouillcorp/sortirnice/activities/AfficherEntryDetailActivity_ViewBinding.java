// Generated code from Butter Knife. Do not modify!
package com.pouillcorp.sortirnice.activities;

import android.view.View;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.CallSuper;
import androidx.annotation.UiThread;
import butterknife.Unbinder;
import butterknife.internal.Utils;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.pouillcorp.sortirnice.R;
import java.lang.IllegalStateException;
import java.lang.Override;

public class AfficherEntryDetailActivity_ViewBinding implements Unbinder {
  private AfficherEntryDetailActivity target;

  @UiThread
  public AfficherEntryDetailActivity_ViewBinding(AfficherEntryDetailActivity target) {
    this(target, target.getWindow().getDecorView());
  }

  @UiThread
  public AfficherEntryDetailActivity_ViewBinding(AfficherEntryDetailActivity target, View source) {
    this.target = target;

    target.nameFr = Utils.findRequiredViewAsType(source, R.id.name_fr, "field 'nameFr'", TextView.class);
    target.category = Utils.findRequiredViewAsType(source, R.id.category, "field 'category'", TextView.class);
    target.description = Utils.findRequiredViewAsType(source, R.id.description, "field 'description'", TextView.class);
    target.location = Utils.findRequiredViewAsType(source, R.id.location, "field 'location'", TextView.class);
    target.blocStanding = Utils.findRequiredViewAsType(source, R.id.bloc_standing, "field 'blocStanding'", LinearLayout.class);
    target.standing = Utils.findRequiredViewAsType(source, R.id.standing, "field 'standing'", TextView.class);
    target.blocMeuble = Utils.findRequiredViewAsType(source, R.id.bloc_meuble, "field 'blocMeuble'", LinearLayout.class);
    target.meuble = Utils.findRequiredViewAsType(source, R.id.meuble, "field 'meuble'", TextView.class);
    target.blocPeriode = Utils.findRequiredViewAsType(source, R.id.bloc_periode, "field 'blocPeriode'", LinearLayout.class);
    target.periode = Utils.findRequiredViewAsType(source, R.id.periode, "field 'periode'", TextView.class);
    target.couchage = Utils.findRequiredViewAsType(source, R.id.couchage, "field 'couchage'", TextView.class);
    target.blocCouchage = Utils.findRequiredViewAsType(source, R.id.bloc_couchage, "field 'blocCouchage'", LinearLayout.class);
    target.blocChambre = Utils.findRequiredViewAsType(source, R.id.bloc_chambre, "field 'blocChambre'", LinearLayout.class);
    target.blocChambreAccessible = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_accessible, "field 'blocChambreAccessible'", LinearLayout.class);
    target.blocChambreAppartement = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_appartement, "field 'blocChambreAppartement'", LinearLayout.class);
    target.blocChambreDouble = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_double, "field 'blocChambreDouble'", LinearLayout.class);
    target.blocChambreDouche = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_douche, "field 'blocChambreDouche'", LinearLayout.class);
    target.blocChambreEtage = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_etage, "field 'blocChambreEtage'", LinearLayout.class);
    target.blocChambreFamille = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_famille, "field 'blocChambreFamille'", LinearLayout.class);
    target.blocChambreSdb = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_sdb, "field 'blocChambreSdb'", LinearLayout.class);
    target.blocChambreSingle = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_single, "field 'blocChambreSingle'", LinearLayout.class);
    target.blocChambreStudio = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_studio, "field 'blocChambreStudio'", LinearLayout.class);
    target.blocChambreSuite = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_suite, "field 'blocChambreSuite'", LinearLayout.class);
    target.blocChambreSurface = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_surface, "field 'blocChambreSurface'", LinearLayout.class);
    target.blocChambreTotal = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_total, "field 'blocChambreTotal'", LinearLayout.class);
    target.blocChambreTriple = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_triple, "field 'blocChambreTriple'", LinearLayout.class);
    target.blocChambreTwin = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_twin, "field 'blocChambreTwin'", LinearLayout.class);
    target.blocChambreType = Utils.findRequiredViewAsType(source, R.id.bloc_chambre_type, "field 'blocChambreType'", LinearLayout.class);
    target.roomCount = Utils.findRequiredViewAsType(source, R.id.room_count, "field 'roomCount'", TextView.class);
    target.roomBathCount = Utils.findRequiredViewAsType(source, R.id.room_bath_count, "field 'roomBathCount'", TextView.class);
    target.roomShowerCount = Utils.findRequiredViewAsType(source, R.id.room_shower_count, "field 'roomShowerCount'", TextView.class);
    target.suiteCount = Utils.findRequiredViewAsType(source, R.id.suite_count, "field 'suiteCount'", TextView.class);
    target.studioCount = Utils.findRequiredViewAsType(source, R.id.studio_count, "field 'studioCount'", TextView.class);
    target.apartmentCount = Utils.findRequiredViewAsType(source, R.id.apartment_count, "field 'apartmentCount'", TextView.class);
    target.roomAccessibleCount = Utils.findRequiredViewAsType(source, R.id.room_accessible_count, "field 'roomAccessibleCount'", TextView.class);
    target.singleCount = Utils.findRequiredViewAsType(source, R.id.single_count, "field 'singleCount'", TextView.class);
    target.doubleCount = Utils.findRequiredViewAsType(source, R.id.double_count, "field 'doubleCount'", TextView.class);
    target.tripleCount = Utils.findRequiredViewAsType(source, R.id.triple_count, "field 'tripleCount'", TextView.class);
    target.twinsCount = Utils.findRequiredViewAsType(source, R.id.twins_count, "field 'twinsCount'", TextView.class);
    target.familyCount = Utils.findRequiredViewAsType(source, R.id.family_count, "field 'familyCount'", TextView.class);
    target.area = Utils.findRequiredViewAsType(source, R.id.area, "field 'area'", TextView.class);
    target.type = Utils.findRequiredViewAsType(source, R.id.type, "field 'type'", TextView.class);
    target.floor = Utils.findRequiredViewAsType(source, R.id.floor, "field 'floor'", TextView.class);
    target.bedroomCount = Utils.findRequiredViewAsType(source, R.id.bedroom_count, "field 'bedroomCount'", TextView.class);
    target.sleepsCount = Utils.findRequiredViewAsType(source, R.id.sleeps_count, "field 'sleepsCount'", TextView.class);
    target.furnishedRoomCount = Utils.findRequiredViewAsType(source, R.id.furnished_room_count, "field 'furnishedRoomCount'", TextView.class);
    target.atmosphere = Utils.findRequiredViewAsType(source, R.id.atmosphere, "field 'atmosphere'", TextView.class);
    target.blocAtmosphere = Utils.findRequiredViewAsType(source, R.id.bloc_atmosphere, "field 'blocAtmosphere'", LinearLayout.class);
    target.blocService = Utils.findRequiredViewAsType(source, R.id.bloc_service, "field 'blocService'", LinearLayout.class);
    target.service = Utils.findRequiredViewAsType(source, R.id.service, "field 'service'", TextView.class);
    target.blocAddress = Utils.findRequiredViewAsType(source, R.id.bloc_address, "field 'blocAddress'", LinearLayout.class);
    target.addressLine1 = Utils.findRequiredViewAsType(source, R.id.address_line1, "field 'addressLine1'", TextView.class);
    target.addressLine2 = Utils.findRequiredViewAsType(source, R.id.address_line2, "field 'addressLine2'", TextView.class);
    target.addressLine3 = Utils.findRequiredViewAsType(source, R.id.address_line3, "field 'addressLine3'", TextView.class);
    target.adressZip = Utils.findRequiredViewAsType(source, R.id.adress_zip, "field 'adressZip'", TextView.class);
    target.adressCity = Utils.findRequiredViewAsType(source, R.id.adress_city, "field 'adressCity'", TextView.class);
    target.boutonsMapWaze = Utils.findRequiredViewAsType(source, R.id.boutons_map_waze, "field 'boutonsMapWaze'", LinearLayout.class);
    target.blocStation = Utils.findRequiredViewAsType(source, R.id.bloc_station, "field 'blocStation'", LinearLayout.class);
    target.station = Utils.findRequiredViewAsType(source, R.id.station, "field 'station'", TextView.class);
    target.blocPhone = Utils.findRequiredViewAsType(source, R.id.bloc_phone, "field 'blocPhone'", LinearLayout.class);
    target.phone = Utils.findRequiredViewAsType(source, R.id.phone, "field 'phone'", TextView.class);
    target.blocFax = Utils.findRequiredViewAsType(source, R.id.bloc_fax, "field 'blocFax'", LinearLayout.class);
    target.fax = Utils.findRequiredViewAsType(source, R.id.fax, "field 'fax'", TextView.class);
    target.blocEmail = Utils.findRequiredViewAsType(source, R.id.bloc_email, "field 'blocEmail'", LinearLayout.class);
    target.email = Utils.findRequiredViewAsType(source, R.id.email, "field 'email'", TextView.class);
    target.blocWebsite = Utils.findRequiredViewAsType(source, R.id.bloc_website, "field 'blocWebsite'", LinearLayout.class);
    target.website = Utils.findRequiredViewAsType(source, R.id.website, "field 'website'", TextView.class);
    target.blocFacebook = Utils.findRequiredViewAsType(source, R.id.bloc_facebook, "field 'blocFacebook'", LinearLayout.class);
    target.facebook = Utils.findRequiredViewAsType(source, R.id.facebook, "field 'facebook'", TextView.class);
    target.blocTwitter = Utils.findRequiredViewAsType(source, R.id.bloc_twitter, "field 'blocTwitter'", LinearLayout.class);
    target.twitter = Utils.findRequiredViewAsType(source, R.id.twitter, "field 'twitter'", TextView.class);
    target.blocPayment = Utils.findRequiredViewAsType(source, R.id.bloc_payment, "field 'blocPayment'", LinearLayout.class);
    target.payment = Utils.findRequiredViewAsType(source, R.id.payment, "field 'payment'", TextView.class);
    target.blocOuvert = Utils.findRequiredViewAsType(source, R.id.bloc_ouvert, "field 'blocOuvert'", LinearLayout.class);
    target.opening = Utils.findRequiredViewAsType(source, R.id.opening, "field 'opening'", TextView.class);
    target.openings = Utils.findRequiredViewAsType(source, R.id.openings, "field 'openings'", TextView.class);
    target.blocFerme = Utils.findRequiredViewAsType(source, R.id.bloc_ferme, "field 'blocFerme'", LinearLayout.class);
    target.closure = Utils.findRequiredViewAsType(source, R.id.closure, "field 'closure'", TextView.class);
    target.closing = Utils.findRequiredViewAsType(source, R.id.closing, "field 'closing'", TextView.class);
    target.closings = Utils.findRequiredViewAsType(source, R.id.closings, "field 'closings'", TextView.class);
    target.blocLabel = Utils.findRequiredViewAsType(source, R.id.bloc_label, "field 'blocLabel'", LinearLayout.class);
    target.label = Utils.findRequiredViewAsType(source, R.id.label, "field 'label'", TextView.class);
    target.blocAnimation = Utils.findRequiredViewAsType(source, R.id.bloc_animation, "field 'blocAnimation'", LinearLayout.class);
    target.animation = Utils.findRequiredViewAsType(source, R.id.animation, "field 'animation'", TextView.class);
    target.blocOption = Utils.findRequiredViewAsType(source, R.id.bloc_option, "field 'blocOption'", LinearLayout.class);
    target.option = Utils.findRequiredViewAsType(source, R.id.option, "field 'option'", TextView.class);
    target.blocAmenity = Utils.findRequiredViewAsType(source, R.id.bloc_amenity, "field 'blocAmenity'", LinearLayout.class);
    target.amenity = Utils.findRequiredViewAsType(source, R.id.amenity, "field 'amenity'", TextView.class);
    target.capacityTotal = Utils.findRequiredViewAsType(source, R.id.capacity_total, "field 'capacityTotal'", TextView.class);
    target.capacityInterieur = Utils.findRequiredViewAsType(source, R.id.capacity_interieur, "field 'capacityInterieur'", TextView.class);
    target.capacityExterieur = Utils.findRequiredViewAsType(source, R.id.capacity_exterieur, "field 'capacityExterieur'", TextView.class);
    target.capacityAssis = Utils.findRequiredViewAsType(source, R.id.capacity_assis, "field 'capacityAssis'", TextView.class);
    target.capacityDebout = Utils.findRequiredViewAsType(source, R.id.capacity_debout, "field 'capacityDebout'", TextView.class);
    target.capacityGroup = Utils.findRequiredViewAsType(source, R.id.capacity_group, "field 'capacityGroup'", TextView.class);
    target.capacitySalle = Utils.findRequiredViewAsType(source, R.id.capacity_salle, "field 'capacitySalle'", TextView.class);
    target.blocCapacity = Utils.findRequiredViewAsType(source, R.id.bloc_capacity, "field 'blocCapacity'", LinearLayout.class);
    target.blocCapacityAssis = Utils.findRequiredViewAsType(source, R.id.bloc_capacity_assis, "field 'blocCapacityAssis'", LinearLayout.class);
    target.blocCapacityDebout = Utils.findRequiredViewAsType(source, R.id.bloc_capacity_debout, "field 'blocCapacityDebout'", LinearLayout.class);
    target.blocCapacityExterieur = Utils.findRequiredViewAsType(source, R.id.bloc_capacity_exterieur, "field 'blocCapacityExterieur'", LinearLayout.class);
    target.blocCapacityGroup = Utils.findRequiredViewAsType(source, R.id.bloc_capacity_group, "field 'blocCapacityGroup'", LinearLayout.class);
    target.blocCapacityInterieur = Utils.findRequiredViewAsType(source, R.id.bloc_capacity_interieur, "field 'blocCapacityInterieur'", LinearLayout.class);
    target.blocCapacitySalle = Utils.findRequiredViewAsType(source, R.id.bloc_capacity_salle, "field 'blocCapacitySalle'", LinearLayout.class);
    target.blocCapacityTotal = Utils.findRequiredViewAsType(source, R.id.bloc_capacity_total, "field 'blocCapacityTotal'", LinearLayout.class);
    target.blocSector = Utils.findRequiredViewAsType(source, R.id.bloc_sector, "field 'blocSector'", LinearLayout.class);
    target.secto = Utils.findRequiredViewAsType(source, R.id.secto, "field 'secto'", TextView.class);
    target.fabExit = Utils.findRequiredViewAsType(source, R.id.fabExit, "field 'fabExit'", FloatingActionButton.class);
    target.fabFavoriAdd = Utils.findRequiredViewAsType(source, R.id.fabFavoriAdd, "field 'fabFavoriAdd'", FloatingActionButton.class);
    target.fabFavoriSuppr = Utils.findRequiredViewAsType(source, R.id.fabFavoriSuppr, "field 'fabFavoriSuppr'", FloatingActionButton.class);
    target.scrollView = Utils.findRequiredViewAsType(source, R.id.scrollView, "field 'scrollView'", ScrollView.class);
  }

  @Override
  @CallSuper
  public void unbind() {
    AfficherEntryDetailActivity target = this.target;
    if (target == null) throw new IllegalStateException("Bindings already cleared.");
    this.target = null;

    target.nameFr = null;
    target.category = null;
    target.description = null;
    target.location = null;
    target.blocStanding = null;
    target.standing = null;
    target.blocMeuble = null;
    target.meuble = null;
    target.blocPeriode = null;
    target.periode = null;
    target.couchage = null;
    target.blocCouchage = null;
    target.blocChambre = null;
    target.blocChambreAccessible = null;
    target.blocChambreAppartement = null;
    target.blocChambreDouble = null;
    target.blocChambreDouche = null;
    target.blocChambreEtage = null;
    target.blocChambreFamille = null;
    target.blocChambreSdb = null;
    target.blocChambreSingle = null;
    target.blocChambreStudio = null;
    target.blocChambreSuite = null;
    target.blocChambreSurface = null;
    target.blocChambreTotal = null;
    target.blocChambreTriple = null;
    target.blocChambreTwin = null;
    target.blocChambreType = null;
    target.roomCount = null;
    target.roomBathCount = null;
    target.roomShowerCount = null;
    target.suiteCount = null;
    target.studioCount = null;
    target.apartmentCount = null;
    target.roomAccessibleCount = null;
    target.singleCount = null;
    target.doubleCount = null;
    target.tripleCount = null;
    target.twinsCount = null;
    target.familyCount = null;
    target.area = null;
    target.type = null;
    target.floor = null;
    target.bedroomCount = null;
    target.sleepsCount = null;
    target.furnishedRoomCount = null;
    target.atmosphere = null;
    target.blocAtmosphere = null;
    target.blocService = null;
    target.service = null;
    target.blocAddress = null;
    target.addressLine1 = null;
    target.addressLine2 = null;
    target.addressLine3 = null;
    target.adressZip = null;
    target.adressCity = null;
    target.boutonsMapWaze = null;
    target.blocStation = null;
    target.station = null;
    target.blocPhone = null;
    target.phone = null;
    target.blocFax = null;
    target.fax = null;
    target.blocEmail = null;
    target.email = null;
    target.blocWebsite = null;
    target.website = null;
    target.blocFacebook = null;
    target.facebook = null;
    target.blocTwitter = null;
    target.twitter = null;
    target.blocPayment = null;
    target.payment = null;
    target.blocOuvert = null;
    target.opening = null;
    target.openings = null;
    target.blocFerme = null;
    target.closure = null;
    target.closing = null;
    target.closings = null;
    target.blocLabel = null;
    target.label = null;
    target.blocAnimation = null;
    target.animation = null;
    target.blocOption = null;
    target.option = null;
    target.blocAmenity = null;
    target.amenity = null;
    target.capacityTotal = null;
    target.capacityInterieur = null;
    target.capacityExterieur = null;
    target.capacityAssis = null;
    target.capacityDebout = null;
    target.capacityGroup = null;
    target.capacitySalle = null;
    target.blocCapacity = null;
    target.blocCapacityAssis = null;
    target.blocCapacityDebout = null;
    target.blocCapacityExterieur = null;
    target.blocCapacityGroup = null;
    target.blocCapacityInterieur = null;
    target.blocCapacitySalle = null;
    target.blocCapacityTotal = null;
    target.blocSector = null;
    target.secto = null;
    target.fabExit = null;
    target.fabFavoriAdd = null;
    target.fabFavoriSuppr = null;
    target.scrollView = null;
  }
}
